resource_types:
- name: terraform
  type: docker-image
  source:
    repository: ljfranklin/terraform-resource
    tag: beta-backend

- name: pivnet
  type: docker-image
  source:
    repository: pivotalcf/pivnet-resource
    tag: latest-final

shared:
- params: &modify-terraforming-dns-params
    GCP_DNS_PROJECT_ID: ((cf_infra_gcp_project_id))
    GCP_DNS_SERVICE_ACCOUNT_EMAIL: ((cf_infra_gcp_service_account_email))
    GCP_DNS_SERVICE_ACCOUNT_KEY: ((cf_infra_gcp_service_account_key))
    GCP_DNS_ZONE_NAME: infrastructure
    GCP_DNS_SUFFIX: azure.infrastructure.cf-app.com
    GCP_DNS_RECORD_TTL: 60

- params: &om-creds
    OM_USERNAME: ((om.username))
    OM_PASSWORD: ((om.password))

resources:
- name: after-midnight
  type: time
  source:
    start: 12:00 AM -0700
    stop: 2:00 AM -0700

- name: cf-infra-tracker
  type: tracker
  source:
    token: ((cf_infra_tracker_token))
    project_id: ((cf_infrastructure_tracker_id))
    tracker_url: https://www.pivotaltracker.com

- name: terraforming
  type: git
  source:
    branch: master
    uri: git@github.com:pivotal-cf/terraforming-azure.git
    private_key: ((cf_infra_bot_github_user.private_key))

- name: terraforming-release
  type: github-release
  source:
    owner: pivotal-cf
    repository: terraforming-azure
    access_token: ((cf_infra_bot_user_github_access_token))
    drafts: true

- name: version
  type: semver
  source:
    initial_version: 0.16.0
    driver: s3
    bucket: terraforming
    key: terraforming-azure/version
    access_key_id: ((aws_access_key_id))
    secret_access_key: ((aws_secret_access_key))

- name: env-state-azure
  type: terraform
  source:
    backend_type: gcs
    backend_config:
      bucket: infra-tf-states
      prefix: azure
      region: us-central1
      credentials: ((cf_infra_gcp_service_account_key))
    vars:
      location: "East US"
      subscription_id: ((azure_subscription_id))
      tenant_id: ((azure_tenant_id))
      client_id: ((azure_client_id))
      client_secret: ((azure_client_secret))
      vm_admin_username: "admin-username"
      vm_admin_password: ((azure_vm_admin_password))
      dns_suffix: azure.infrastructure.cf-app.com
      ssl_cert: ((ssl_cert.certificate))
      ssl_private_key: ((ssl_cert.private_key))

- name: infrastructure-ci
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/infrastructure-ci.git

- name: pcf-releng-ci
  type: git
  source:
    uri: git@github.com:pivotal-cf/pcf-releng-ci.git
    private_key: ((cf_infra_bot_github_user.private_key))
    ignore_paths:
    - pipelines
    - ci_screen

- name: srt
  type: pivnet
  source:
    api_token: ((pivnet_token))
    product_slug: elastic-runtime
    product_version: ^\d+\.\d+\.\d+
    sort_by: semver

- name: opsman-image
  type: pivnet
  source:
    product_slug: ops-manager
    api_token: ((pivnet_token))
    product_version: ^\d+\.\d+\.\d+
    sort_by: semver

jobs:
- name: deploy-pas
  serial: true
  public: false
  plan:
  - aggregate:
    - get: after-midnight
      trigger: true
    - get: terraforming
      trigger: true
    - get: ci
      resource: infrastructure-ci
    - get: pcf-releng-ci
    - get: srt
      trigger: true
      params:
        globs:
        - srt-*.pivotal
    - get: opsman-image
      trigger: true
      params:
        globs:
        - '*Azure.yml'
  - do:
    - task: opsman-url
      file: ci/scripts/terraforming/latest-opsman/task.yml
      params:
        IAAS: Azure
        KEY: east_us
    - put: env-state-azure
      params:
        generate_random_name: true
        terraform_source: terraforming/terraforming-pas
        var_files: [tfvars/terraform.yml]
    - task: add-dns
      file: ci/scripts/common/manage-gcp-dns/task-terraforming.yml
      params:
        <<: *modify-terraforming-dns-params
        ACTION: add
      input_mapping:
        env-state: env-state-azure
    - task: configure-director
      file: ci/scripts/terraforming/configure-director/task.yml
      params:
        <<: *om-creds
        TEMPLATE_PATH: director-config-template/ci/assets/template/director-config.yml
      input_mapping:
        env-state: env-state-azure
        director-config-template: terraforming
    - task: download-stemcell
      file: pcf-releng-ci/tasks/configuration/download-pivnet-stemcell/task.yml
      input_mapping:
        ert-product: srt
      params:
        IAAS_TYPE: azure
        PIVNET_TOKEN: ((pivnet_token))
    - task: upload-configure-stage-pas
      file: ci/scripts/terraforming/upload-configure-stage/task.yml
      params:
        <<: *om-creds
        PRODUCT_NAME: cf
        PRODUCT_CONFIG_TEMPLATE: ci/assets/template/srt-config.yml
      input_mapping:
        env-state: env-state-azure
        product: srt
        product-config-repo: terraforming
    - task: apply-changes
      file: ci/scripts/terraforming/apply-changes/task.yml
      params:
        <<: *om-creds
      input_mapping:
        env-state: env-state-azure
    ensure:
      do:
      - task: delete-installation
        file: pcf-releng-ci/tasks/environment/delete-installation/task.yml
        params:
          OPSMAN_USERNAME: ((om.username))
          OPSMAN_PASSWORD: ((om.password))
          OPSMAN_URL_SUFFIX: azure.infrastructure.cf-app.com
        input_mapping:
          environment: env-state-azure
      - aggregate:
        - task: remove-dns
          file: ci/scripts/common/manage-gcp-dns/task-terraforming.yml
          params:
            <<: *modify-terraforming-dns-params
            ACTION: remove
            CHECK_DNS: false
          input_mapping:
            env-state: env-state-azure
        - put: env-state-azure
          params:
            terraform_source: terraforming/terraforming-pas
            env_name_file: env-state-azure/name
            delete_on_failure: true
            action: destroy
            var_files: [tfvars/terraform.yml]
          get_params:
            action: destroy

- name: publish
  serial: true
  plan:
  - aggregate:
    - get: terraforming
      passed: [deploy-pas]
      trigger: true
    - get: version
      params:
        bump: minor
    - get: ci
      resource: infrastructure-ci
  - task: release
    file: ci/scripts/terraforming/release/task.yml
    params:
      IAAS: azure
  - put: terraforming-release
    params:
      name: release/version
      tag: release/version
      commitish: release/commitish
      globs:
      - release/terraforming-azure-*.tar.gz
  - put: version
    params:
      file: version/version

- name: deliver-stories
  plan:
  - get: terraforming
    trigger: true
    passed:
    - deploy-pas
  - put: cf-infra-tracker
    params:
      repos:
      - terraforming
